useDynLib("glmnet")
importFrom(utils,head,tail,packageDescription)
importFrom("graphics", "abline", "axis", "matplot", "points",
     "segments", "text")
import("methods")
importFrom("stats", "approx", "coef", "median", "predict", "rmultinom",
     "runif", "weighted.mean")

import(Matrix)
import(foreach)
export(glmnet,
       print.glmnet,plot.glmnet,plot.multnet,plot.mrelnet,predict.glmnet,coef.glmnet,coef.cv.glmnet,predict.cv.glmnet,plot.cv.glmnet,deviance.glmnet,
       cv.glmnet,
       cv.elnet,cv.lognet,cv.multnet,cv.fishnet,cv.coxnet,cv.mrelnet,getmin,auc,auc.mat,cvcompute,coxnet.deviance,cvtype,
       lambda.interp,response.coxnet,rmult,glmnet_softmax,na.mean,glmnet.control,
       predict.elnet,predict.lognet,predict.fishnet,mrelnet,predict.multnet,predict.coxnet,predict.mrelnet,nonzeroCoef,plotCoef,jerr,jerr.elnet,jerr.lognet,jerr.fishnet,jerr.coxnet,jerr.mrelnet,elnet,lognet,fishnet,coxnet,getcoef,getcoef.multinomial,coefnorm,check_dots)

S3method("print","glmnet")
S3method("plot","glmnet")
S3method("plot","multnet")
S3method("plot","mrelnet")
S3method("predict","glmnet")
S3method("predict","lognet")
S3method("predict","elnet")
S3method("predict","coxnet")
S3method("predict","fishnet")
S3method("predict","mrelnet")
S3method("predict","multnet")
S3method("coef","glmnet")
S3method("coef","cv.glmnet")
S3method("predict","cv.glmnet")
S3method("plot","cv.glmnet")
S3method("deviance","glmnet")




